install.packages("raster")
library(raster)
#importing data with brick (part of raster package), it import raster data, which is made of grids of satellite image
#first let R know where the data is with setwd
setwd("C:/lab/")
#.grd = grid file; gri = image file; stx = ; hdr = 
#import satellite data, brick("name of the file"), l=landsat, landsat is a 1972 satellite program with resolution of 30m that captures the whole globe every 14 days, 
still used today
l_2011 <- brick("p224r63_2011.grd")
# nota: objects in R cannot be numbers, at least one letter must be present
#have info on the data
l_2011
#we get: class=type of file, dimensions = 4447533 is number of pixels in just one band, first two numbers are raws and columns; 7 is number of layers; so total pixel 
number is 4million*7 layers..
#resolution is in meters, names sre (spectral reflectance) are thermal images; values means the values of reflectance, from 0 to 1 (max reflectance)
#reflectance = ratio between reflected light and incident ("sent") light
#plot the data with plot, we see a plot in the amazon pictured in different reflectance ranges, the first 3 bands (B1, B2, B3) are the reflectance in (visible) blue, 
green and red; 
plot(l_2011)
#function colorRampPalette, changes colors used to show the differences in reflectance; before R was using a default color pallet; note:colors in R always in quotes; 
we put c in front because it is an array, 100 is the number of colors in that range that we want to use
cl <- colorRampPalette(c("black", "grey", "light grey"))(100)
#insert the new colors in the plot function
plot(l_2011, col = cl)
# to match the bands with RGB of the computer with plotRGB, r=3 means we put the red band in r band spot (?), strectch is used to strech the data 
and better see the colors, we are using the same colors our eyes would see it in this example (this color combo is called "natural land colors" 
as our esyes would see it, with blue, red and green)
plotRGB(l_2011, r=3, g=2, b=1, stretch="Lin")

Lecture 05/11
#we want to plot only one of the color band (green or blue or red or near infrared (ni)), for example B1_sre(spectral reflectance)
plot(l2011$B1_sre)
#now we are going to change the colors, the legend and schemes of the colors, last number is the number of shades between the two selected colors that the program is going to use
cl <- colorRampPalette(c("black","grey","light grey"))(100)
plot(l2011$B1_sre, col = cl)
#if we wNT TO CHANGE THE COLRRAMPPALLET colors
cl_1 <- colorRampPalette(c("dark green","green","light green"))(100)
#the light green are the areas where a lot of green light is reflected and not absorbed, the dark green the contrary. The higher the reflectance the lighter ther color, as we decided by writing the code this way.
#doing the same for the blue band (B1_sre)
clb <- colorRampPalette(c("dark blue","blue","light blue"))(100)
plot(l2011$B1_sre, col=clb)
#how to plot two graphs on the same "page" (multiframe = mf), ex. comparing the blue to the green. We use the par function
par(mfrow = c(1,2))
plot(l2011$B2_sre, col=clg)
plot(l2011$B1_sre, col=clb)
#if we want two rows and 1 column instead..
par(mfrow = c(2,1))
plot(l2011$B2_sre, col=clg)
plot(l2011$B1_sre, col=clb)

#Lecture 8/11
library(raster)
setwd("C:/lab")
#raster brick from brick function creates a multi-layered file
l2011 <- brick("p224r63_2011.grd")
l2011
#B1, B2, B3 etc show the various lens which make uo the file
plot(l2011$B1_sre)
clb <- colorRampPalette(c("dark blue","blue","light blue"))(100)
plot(l2011$B1_sre, col = clb)
clg <- colorRampPalette(c("dark green", "green", "light green"))(100)
par(mfrow = c(2,1))
plot(l2011$B1_sre, col = clb)
plot(l2011$B2_sre, col = clg)

#plot the first 4 bands with 2 raws and 2 columns
clr <- colorRampPalette(c("dark red","red","pink"))(100)
cln <- colorRampPalette(c("red","orange","yellow"))(100)
par(mfrow = c(2,2))
plot(l2011$B1_sre, col = clb)
plot(l2011$B2_sre, col = clg)
plot(l2011$B3_sre, col = clr)
plot(l2011$B4_sre, col = cln)
#function to clean images
dev.off()
#see the "real" image first with "human eyes" (red, blue and green wavelenghts), thne introducing near infrared and changing lens
plotRGB(l2011, r = 3, g = 2, b = 1, stretch = "Lin")
plotRGB(l2011, r = 1, g = 2, b = 3, stretch = "Lin")
plotRGB(l2011, r = 4, g = 3, b = 2, stretch = "Lin")
